Zeroed: bttdevice.arena.btt_map(0)=0x80000000
Zeroed: bttdevice.arena.btt_map(1)=0x80000001
Zeroed: bttdevice.arena.btt_map(2)=0x80000002
Zeroed: bttdevice.arena.btt_map(3)=0x80000003
Zeroed: bttdevice.arena.btt_map(4)=0x80000004
Zeroed: bttdevice.arena.btt_map(5)=0x80000005
Zeroed: bttdevice.arena.btt_map(6)=0x80000003
Zeroed: bttdevice.arena.btt_map(2)=0x8000FFFF
libpmempool_map_flog/TEST1: START: libpmempool_map_flog
 ./libpmempool_map_flog$(nW) $(nW) -r 1 -t btt -a 1
checking BTT Info headers

arena 0: BTT Info header checksum correct

checking BTT map and flog

arena 0: checking map and flog

arena 0: invalid map entry at 2

arena 0: map entry 3 duplicated at 6

arena 0: unmapped block 2

arena 0: unmapped block 6

arena 0: number of unmapped blocks: 2

arena 0: number of invalid map entries: 2

Do you want repair invalid map entries?

arena 0: storing 0x40000003 at 3 entry

arena 0: storing 0x40000006 at 6 entry

arena 0: storing 0x40000002 at 2 entry

status = repaired

libpmempool_map_flog/TEST1: Done
Error: bttdevice.arena.btt_map(0)=0x40000000
Error: bttdevice.arena.btt_map(1)=0x40000001
Error: bttdevice.arena.btt_map(2)=0x40000002
Error: bttdevice.arena.btt_map(3)=0x40000003
Error: bttdevice.arena.btt_map(4)=0x40000004
Error: bttdevice.arena.btt_map(5)=0x40000005
Error: bttdevice.arena.btt_map(6)=0x40000003
Error: bttdevice.arena.btt_map(2)=0x4000FFFF
libpmempool_map_flog/TEST1: START: libpmempool_map_flog
 ./libpmempool_map_flog$(nW) $(nW) -r 1 -t btt -a 1
checking BTT Info headers

arena 0: BTT Info header checksum correct

checking BTT map and flog

arena 0: checking map and flog

arena 0: invalid map entry at 2

arena 0: map entry 3 duplicated at 6

arena 0: unmapped block 2

arena 0: unmapped block 6

arena 0: number of unmapped blocks: 2

arena 0: number of invalid map entries: 2

Do you want repair invalid map entries?

arena 0: storing 0x40000003 at 3 entry

arena 0: storing 0x40000006 at 6 entry

arena 0: storing 0x40000002 at 2 entry

status = repaired

libpmempool_map_flog/TEST1: Done
Initial: bttdevice.arena.btt_map(0)=0x00000000
Initial: bttdevice.arena.btt_map(1)=0x00000001
Initial: bttdevice.arena.btt_map(2)=0x00000002
Initial: bttdevice.arena.btt_map(3)=0x00000003
Initial: bttdevice.arena.btt_map(4)=0x00000004
Initial: bttdevice.arena.btt_map(5)=0x00000005
Initial: bttdevice.arena.btt_map(6)=0x00000003
Initial: bttdevice.arena.btt_map(2)=0x0000FFFF
libpmempool_map_flog/TEST1: START: libpmempool_map_flog
 ./libpmempool_map_flog$(nW) $(nW) -r 1 -t btt -a 1
checking BTT Info headers

arena 0: BTT Info header checksum correct

checking BTT map and flog

arena 0: checking map and flog

status = consistent

libpmempool_map_flog/TEST1: Done
Normal: bttdevice.arena.btt_map(0)=0xC0000000
Normal: bttdevice.arena.btt_map(1)=0xC0000001
Normal: bttdevice.arena.btt_map(2)=0xC0000002
Normal: bttdevice.arena.btt_map(3)=0xC0000003
Normal: bttdevice.arena.btt_map(4)=0xC0000004
Normal: bttdevice.arena.btt_map(5)=0xC0000005
Normal: bttdevice.arena.btt_map(6)=0xC0000003
Normal: bttdevice.arena.btt_map(2)=0xC000FFFF
libpmempool_map_flog/TEST1: START: libpmempool_map_flog
 ./libpmempool_map_flog$(nW) $(nW) -r 1 -t btt -a 1
checking BTT Info headers

arena 0: BTT Info header checksum correct

checking BTT map and flog

arena 0: checking map and flog

arena 0: invalid map entry at 2

arena 0: map entry 3 duplicated at 6

arena 0: unmapped block 2

arena 0: unmapped block 6

arena 0: number of unmapped blocks: 2

arena 0: number of invalid map entries: 2

Do you want repair invalid map entries?

arena 0: storing 0x40000003 at 3 entry

arena 0: storing 0x40000006 at 6 entry

arena 0: storing 0x40000002 at 2 entry

status = repaired

libpmempool_map_flog/TEST1: Done
