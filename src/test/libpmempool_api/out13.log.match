bttdevice.arena.btt_map(0)=0x00000000
bttdevice.arena.btt_map(1)=0x00000001
bttdevice.arena.btt_map(2)=0x00000002
bttdevice.arena.btt_map(3)=0x00000003
bttdevice.arena.btt_map(4)=0x00000004
bttdevice.arena.btt_flog(0).seq=4
libpmempool_api/TEST13: START: libpmempool_api
 ./libpmempool_api$(nW) $(nW) -r 1 -t btt
checking BTT Info headers

arena 0: BTT Info header checksum correct

checking BTT map and flog

arena 0: checking map and flog

arena 0: invalid flog entry at 0

arena 0: unmapped block 40322

arena 0: number of unmapped blocks: 1

arena 0: number of invalid flog entries: 1

status = not consistent

libpmempool_api/TEST13: Done
libpmempool_api/TEST13: START: libpmempool_api
 ./libpmempool_api$(nW) $(nW) -r 1 -t btt -a 1
checking BTT Info headers

arena 0: BTT Info header checksum correct

checking BTT map and flog

arena 0: checking map and flog

arena 0: invalid flog entry at 0

arena 0: unmapped block 40322

arena 0: number of unmapped blocks: 1

arena 0: number of invalid flog entries: 1

Do you want to repair invalid flog entries?

arena 0: repairing flog at 0 with free block entry 0x40009d82

status = repaired

libpmempool_api/TEST13: Done
